2) существует несколько имен хоста:
	статическое - то, которое задает пользователь, хранится в /etc/hostname;
	временное - имя,  полученное посредством DHCP или mDNS, если статическое имя установлено и оно отлично от localhost, то будет использоваться статическое имя (это специальное имя хоста, инициализированное и поддерживаемое только ядром Linux как вспомогательное имя машины в дополнение к статическому имени хоста и которое сбрасывается после перезагрузки.)
	красивое - имя, которое можно использовать для описания хоста, к примеру «Super duper server», хранится в /etc/machine-info. Может быть полезно, когда имена машин однотипны. Больше всего умиляет, что названия как в физике, типа «прелестный кварк».

5) ssh - это демон. Поэтому у него есть несколько стандарных команд - start, stop, restart, status и другие
	сценарии этих служб находится в /etc/init.d/ (пришло от System V и так и осталось; запуск выполняется в известной среде) или /etc/init (новая версия Upstart)
	! для MacOS службы запускаются из /Library/LaunchDaemons

	для управления демонами можно пользоваться :
	*unix:
		/etc/init.d/ssh status - обращение к самому скрипту (использовался в Sys V, потихоньку избавляемся)
		systemctl - новая обработка команд (методом systemd) наиболее верная в новых весиях
		service - обертка для этих обоих команд (наиболее простая и по этому усеченная по функционалу)

6) cron - демон часов (выполнение заданий по времени)
	как и все демоны стартует вместе с системой (спасибо init)
	Запускает процессы cron из /etc/crontab (в новых версиях прописан запуск утилиты run-parts) и/или из каталогов: /etc/cron.{hourly и т.п)
	Сценарии, находящиеся должны иметь права на выполнение и в имени должны отсутствовать точки!

	anacron выполняет задачи которые нужно выполнить один раз в длительное время, при учитывая что машина выключалась

	для настроки cron: 
		crontab -e - выполнит редактирование crontab

	После завершения работы команды cron файл будет обработан и все правила будут добавлены в /var/spool/cron/crontabs/имя_пользователя причем добавленные процессы будут запускаться именно от того пользователя, от которого вы их добавляли.

	Поэтому тут нужно быть аккуратным, и если вам нужно выполнять скрипты от рута, то и crontab нужно выполнить от рута, а не от пользователя. Это часто становиться причиной проблем.

	crontab [-optinon]
		-u - выбор user (default: текущий)
		-l - вывод crontab
		-r - удалить crontab
		-e - править crontab

	Настройка crontab:
		m h   dom  mon dow
		0 0    *    *   * 

		m - номер минуты
		h - номер часа
		dom - номер дня месяца
		mon - номер месяца
		dow - день недели (в формате mon, san и т.д.)

	зарезервированные сокращения:
		@reboot - при загрузке, только один раз;
		@yearly, @annually - раз год;
		@monthly - раз в месяц;
		@weekly - раз в неделю;
		@daily, @midnight - каждый день;
		@hourly - каждый час.		

	Посмотреть логи с выполнением :
		grep CRON /var/log/syslog

	Можно просто загрузить скрипт в каталоги cron (например, cron.daily) и он будет выполняться оттуда!


22) adduser [optinon] username - добваляет нового пользователя
		--uid - выбираем id
		--gid - выбираем группу для пользователя
		--home - начальный каталог
		--shell - оболочка

24) APT & dpkg
	dpkg - менеджер пакетов для систем на основае debian (ubuntu)
	APT - улучшенный менеджер пакетов. В основе своей использует dpkg для установки пакетов.

	dpkg - устанавливает сами пакеты, но не уставнавливает зависимости (однако может сказать какие нужны)
	APT - мониторит зависимости и если на машине их нет - устанавливает вместе с основным пакетом!

	apt-get - первый интерфейс APT (немного косячный)
	apt - второй интерфейс (наиболее удачный и рекомендуемый)

	dpkg-query - предоставляет информацию о пакетах. Но только о тех что были уставновленны (берет из /var/lib/dpkg)
